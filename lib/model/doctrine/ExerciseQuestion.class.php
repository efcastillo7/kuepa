<?php

/**
 * ExerciseQuestion
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @package    kuepa
 * @subpackage model
 * @author     fiberbunny
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
class ExerciseQuestion extends BaseExerciseQuestion {

    public function evaluate($answer) {
        $score = array();
        $total_score = 0;
        $correct = false;

        switch ($this->getType()) {
            case "multiple-choice":
                //$answer es el VALUE del ExerciseAnswer elegido
                //get answers for question
                $posible_answers = $this->getAnswers();
                $is_correct = false;

                for($i=0; $i<count($posible_answers); $i++){
                    $is_valid = $posible_answers[$i]->getId() == $answer && ($posible_answers[$i]->getCorrect() == "1");

                    $score[] = array(
                        "answer_id" => $posible_answers[$i]->getId(),
                        "correct" => $posible_answers[$i]->getCorrect() == "1", 
                        "score" => $posible_answers[$i]->getValue() * $is_valid
                    );

                    $total_score += $posible_answers[$i]->getValue() * $is_valid;
                    $correct = $correct || $is_valid;
                }
                
                break;
            case "multiple-choice2":
                //$answer es un array de VALUES de ExerciseAnswer
                //get answers for question
                foreach($this->getAnswers() as $position => $exercise_answer){
                    //if is valid
                    $is_correct = isset($answer[$position]) == ($exercise_answer->getCorrect() == "1");
                    $score[] = array(
                        "answer_id" => $exercise_answer->getId(),
                        "correct" => ($exercise_answer->getCorrect() == "1"), 
                        "score" => $exercise_answer->getValue() * $is_correct
                    );

                    $total_score += $exercise_answer->getValue() * $is_correct;
                    $correct = $correct || $is_valid;
                }
                break;
            case "complete":
            case "relation":
                //answer es un array de strings del complete
                //get correct answers
                $exercise_answer = $this->getAnswers()->getFirst();
                preg_match_all('/\[(.*?)\]/', $exercise_answer->getTitle(), $correct_answers);
                foreach($correct_answers[1] as $position => $correct_answer){
                    //correct answer could get multiple correct answers (ex: "foo,bar")
                    $is_correct = false;
                    $posible_answers = explode(",", $correct_answer);
                    for($i=0; $i<count($posible_answers) && !$is_correct; $i++){
                        $is_correct = strtolower(trim($posible_answers[$i])) == strtolower(trim($answer[$position]));
                        $score[$position] = array(
                            "answer_id" => $exercise_answer->getId(),
                            "correct" => $is_correct, 
                            "score" => $exercise_answer->getValue() * $is_correct
                        );

                        $total_score += $exercise_answer->getValue() * $is_correct;
                    }
                }

                break;
            case "open":
                break;
            case "choose":
                //answer es un array de options
                foreach ($this->getAnswers() as $exercise_answer) {
                    if($exercise_answer->getCorrect() > 0){
                        //its not a value
                        $is_correct = $answer[$exercise_answer->getId()] == ($exercise_answer->getCorrect()-1);
                        $score[] = array(
                            "answer_id" => $exercise_answer->getId(),
                            "correct" => $is_correct, 
                            "score" => $exercise_answer->getValue() * $is_correct
                        );

                        $total_score += $exercise_answer->getValue() * $is_correct;
                        $correct = $correct || $is_valid;
                    }
                }
                break;
            default:
                break;
        }

        return array('score' => $total_score, 'answers' => $score, 'correct' => $correct);
    }

}
