<?php

/**
 * ExerciseQuestion
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @package    kuepa
 * @subpackage model
 * @author     fiberbunny
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
class ExerciseQuestion extends BaseExerciseQuestion {

    public function evaluate($answer) {
        $score = array();
        switch ($this->getType()) {
            case "multiple-choice":
                //$answer es el VALUE del ExerciseAnswer elegido
                //get answers for question
                foreach($this->getAnswers() as $exercise_answer){
                    //if is valid
                    if($exercise_answer->getTitle() == $answer){
                        $score[$exercise_answer->getId()] = array(
                            "correct" => $exercise_answer->getCorrect(), 
                            "score" => $exercise_answer->getValue() * $exercise_answer->getCorrect()
                        );
                    }
                }
                
                break;
            case "multiple-choice2":
                //$answer es un array de VALUES de ExerciseAnswer
                //get answers for question
                foreach($this->getAnswers() as $position => $exercise_answer){
                    //if is valid
                    $is_correct = isset($answer[$position]) == $exercise_answer->getCorrect();
                    $score[$exercise_answer->getId()][] = array(
                        "correct" => $is_correct, 
                        "score" => $exercise_answer->getValue() * $is_correct
                    );
                }
                break;
            case "complete":
            case "relation":
                //answer es un array de strings del complete
                //get correct answers
                $exercise_answer = $this->getAnswers()->getFirst();
                preg_match_all('/\[(.*?)\]/', $exercise_answer->getTitle(), $correct_answers);
                foreach($correct_answers[1] as $position => $correct_answer){
                    //correct answer could get multiple correct answers (ex: "foo,bar")
                    foreach (explode(",", $correct_answer) as $one_correct_possible_answer) {
                        $is_correct = strtolower(trim($one_correct_possible_answer)) == strtolower(trim($answer[$position]));
                        $score[$exercise_answer->getId()][$position] = array(
                            "correct" => $is_correct, 
                            "score" => $exercise_answer->getValue() * $is_correct
                        );
                        break;
                    }
                }

                break;
            case "open":
                break;
            default:
                break;
        }

        return $score;
    }

}
